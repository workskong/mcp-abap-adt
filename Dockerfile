## Generated by https://smithery.ai. See: https://smithery.ai/docs/config#dockerfile
## Multi-stage Dockerfile for mcp-abap-adt
## Builder and runtime stages for TypeScript Node.js app
# Builder stage
# -----------------------
FROM node:18-alpine AS builder

WORKDIR /app

# Install build dependencies (use package-lock when available)
COPY package.json package-lock.json* ./
RUN npm ci --prefer-offline --no-audit --progress=false

# Copy sources and build
COPY . .
RUN npm run build

# -----------------------
# Runtime stage
# -----------------------
FROM node:18-alpine AS runtime

WORKDIR /app

# Set environment to production
ENV NODE_ENV=production

# Install only production dependencies
COPY package.json package-lock.json* ./
RUN npm ci --only=production --prefer-offline --no-audit --progress=false

# Copy built artifacts from builder
COPY --from=builder /app/dist ./dist

# Copy environment files if present (optional)
COPY .env* ./

# Create a non-root user and set permissions
RUN addgroup -S app && adduser -S app -G app
USER app

ENV PORT=6969
EXPOSE 6969

# Healthcheck (checks if server responds on PORT)
HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=3 \
	CMD wget --spider --quiet http://localhost:${PORT}/health || exit 1

# Start the server (uses PORT env)
CMD ["node", "dist/index.js"]
